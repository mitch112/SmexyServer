package org.dementhium.tools.coordinategrabber.visual;

import org.dementhium.tools.coordinategrabber.maps.impl.GodwarsMapPanel;

import javax.swing.*;
import javax.swing.event.HyperlinkEvent;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Stephen
 */
public class CoordinateGrabber extends javax.swing.JFrame {

    private static final long serialVersionUID = 7797509860699551827L;

    public ArrayList<GeneratedCoord> generatedCoords = new ArrayList<GeneratedCoord>();
    public ArrayList<GeneratedArea> generatedAreas = new ArrayList<GeneratedArea>();
    private Object[] faceDirOptions = new Object[]{"0:North", "1:Northeast", "2:East", "3:Southeast", "4:South", "5:Southwest", "6:West", "7:Northwest"};
    private Object[] walkOptions = new Object[]{"Yes", "No"};

    private void writeWalkSpawn(int npcId, int height, int direction, GeneratedArea area) {
        /*try {
        //BufferedWriter bw = new BufferedWriter(new FileWriter("./Data/npcs/npcspawns.txt", true));
        } catch (IOException ex) {
        Logger.getLogger(NSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    private void writeStationarySpawn(int npcId, int height, int direction, boolean doesWalk, GeneratedCoord generatedCoord) {
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter("./Data/npcs/npcspawns.txt", true));
            bw.newLine();
            bw.write("" + npcId + " " + generatedCoord.getX() + " " + generatedCoord.getY() + " " + height + " " + direction + " " + doesWalk + "");
            bw.flush();
            bw.close();
            ((HTMLEditorKit) outputPane.getEditorKit()).insertHTML((HTMLDocument) outputPane.getDocument(), ((HTMLDocument) outputPane.getDocument()).getLength(), "Spawn created succsefully!", 0, 0, null);
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
    }

    public CoordinateGrabber() {
        try {
            JPopupMenu.setDefaultLightWeightPopupEnabled(false);
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            initComponents();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    @SuppressWarnings({ "rawtypes", "unchecked" })
	private void initComponents() {

        formattingDialog = new javax.swing.JDialog();
        formatsTabbedPane = new javax.swing.JTabbedPane();
        stationarySpawnPanel = new javax.swing.JPanel();
        saveFormattingLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        headerSeparator = new javax.swing.JSeparator();
        insertLabel = new javax.swing.JLabel();
        variablesToInsertComboBox = new javax.swing.JComboBox();
        formattingScroller = new javax.swing.JScrollPane();
        stationaryFormattingTextArea = new javax.swing.JTextArea();
        insertSelectedButton = new javax.swing.JButton();
        presetFormatsButton = new javax.swing.JButton();
        walkingSpawnPanel = new javax.swing.JPanel();
        saveFormattingLabel1 = new javax.swing.JLabel();
        presetFormatsButton1 = new javax.swing.JButton();
        infoLabel1 = new javax.swing.JLabel();
        formattingScroller1 = new javax.swing.JScrollPane();
        walkingFormattingTextArea = new javax.swing.JTextArea();
        variablesToInsertComboBox1 = new javax.swing.JComboBox();
        insertLabel1 = new javax.swing.JLabel();
        insertSelectedButton1 = new javax.swing.JButton();
        headerSeparator1 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        aboutDialog = new javax.swing.JDialog();
        aboutLabel = new javax.swing.JLabel();
        aboutHeaderSeparator = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        aboutTextArea = new javax.swing.JTextArea();
        outputScroll = new javax.swing.JScrollPane();
        outputPane = new javax.swing.JEditorPane();
        mapsTabs = new javax.swing.JTabbedPane();
        worldMapScroll = new javax.swing.JScrollPane();
        worldMapPanel = new org.dementhium.tools.coordinategrabber.maps.impl.WorldMapPanel(this);
        godWarsMapScroller = new javax.swing.JScrollPane();
        godWarsPanel = new GodwarsMapPanel(this);
        frameMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        tileGrid = new javax.swing.JCheckBoxMenuItem();
        formattingMenu = new javax.swing.JMenu();
        formattingItem = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        aboutItem = new javax.swing.JMenuItem();

        formattingDialog.setTitle("Formatting Editor");
        formattingDialog.setMinimumSize(new java.awt.Dimension(620, 294));

        formatsTabbedPane.setToolTipText("Edit the formatting for a stationary spawn");
        formatsTabbedPane.setMinimumSize(new java.awt.Dimension(0, 0));

        saveFormattingLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        saveFormattingLabel.setText("Edit save formatting:");

        infoLabel.setText("The current formatting the program will save an npc spawn is shown below, you can edit it to whatever you want");

        insertLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        insertLabel.setText("Insert:");

        variablesToInsertComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Generated X Coordinate", "Generated Y Coordinate", "Height Level", "NPC ID"}));
        variablesToInsertComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variablesToInsertComboBoxActionPerformed(evt);
            }
        });

        stationaryFormattingTextArea.setColumns(20);
        stationaryFormattingTextArea.setRows(5);
        stationaryFormattingTextArea.setMinimumSize(new java.awt.Dimension(0, 0));
        formattingScroller.setViewportView(stationaryFormattingTextArea);

        insertSelectedButton.setText("Insert Selected");
        insertSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSelectedButtonActionPerformed(evt);
            }
        });

        presetFormatsButton.setText("Preset formats");
        presetFormatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetFormatsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stationarySpawnPanelLayout = new javax.swing.GroupLayout(stationarySpawnPanel);
        stationarySpawnPanel.setLayout(stationarySpawnPanelLayout);
        stationarySpawnPanelLayout.setHorizontalGroup(
                stationarySpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(stationarySpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(headerSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                                .addComponent(saveFormattingLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 326, Short.MAX_VALUE)
                                                .addComponent(presetFormatsButton))
                                        .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                        .addComponent(formattingScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                                .addComponent(variablesToInsertComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(insertSelectedButton, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                                        .addComponent(insertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        stationarySpawnPanelLayout.setVerticalGroup(
                stationarySpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(stationarySpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(saveFormattingLabel)
                                        .addComponent(presetFormatsButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(headerSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(infoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formattingScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertLabel)
                                .addGroup(stationarySpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(insertSelectedButton))
                                        .addGroup(stationarySpawnPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(variablesToInsertComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );

        formatsTabbedPane.addTab("Stationary Spawn", stationarySpawnPanel);

        saveFormattingLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        saveFormattingLabel1.setText("Edit save formatting:");

        presetFormatsButton1.setText("Preset formats");
        presetFormatsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetFormatsButton1ActionPerformed(evt);
            }
        });

        infoLabel1.setText("The current formatting the program will save an npc spawn is shown below, you can edit it to whatever you want");

        walkingFormattingTextArea.setColumns(20);
        walkingFormattingTextArea.setRows(5);
        formattingScroller1.setViewportView(walkingFormattingTextArea);

        variablesToInsertComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Generated Southeast X Coordinate", "Generated Southeast Y Coordinate", "Generated Northwest X Coordinate", "Generated Northwest Y Coordinate", "Height Level", "NPC ID", "Middle X of the Area", "Middle Y of the Area"}));
        variablesToInsertComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variablesToInsertComboBox1ActionPerformed(evt);
            }
        });

        insertLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        insertLabel1.setText("Insert:");

        insertSelectedButton1.setText("Insert Selected");
        insertSelectedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSelectedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout walkingSpawnPanelLayout = new javax.swing.GroupLayout(walkingSpawnPanel);
        walkingSpawnPanel.setLayout(walkingSpawnPanelLayout);
        walkingSpawnPanelLayout.setHorizontalGroup(
                walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(headerSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                                        .addComponent(saveFormattingLabel1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 326, Short.MAX_VALUE)
                                                        .addComponent(presetFormatsButton1))
                                                .addComponent(infoLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                                .addComponent(formattingScroller1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                                        .addComponent(variablesToInsertComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(insertSelectedButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                                                .addComponent(insertLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap()))
        );
        walkingSpawnPanelLayout.setVerticalGroup(
                walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(headerSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(152, Short.MAX_VALUE))
                        .addGroup(walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(saveFormattingLabel1)
                                                .addComponent(presetFormatsButton1))
                                        .addGap(15, 15, 15)
                                        .addComponent(infoLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formattingScroller1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(insertLabel1)
                                        .addGroup(walkingSpawnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                                        .addGap(3, 3, 3)
                                                        .addComponent(insertSelectedButton1))
                                                .addGroup(walkingSpawnPanelLayout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(variablesToInsertComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(11, 11, 11)))
        );

        formatsTabbedPane.addTab("Walking Spawn", walkingSpawnPanel);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formattingDialogLayout = new javax.swing.GroupLayout(formattingDialog.getContentPane());
        formattingDialog.getContentPane().setLayout(formattingDialogLayout);
        formattingDialogLayout.setHorizontalGroup(
                formattingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formattingDialogLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(formattingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formattingDialogLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 527, Short.MAX_VALUE)
                                                .addComponent(saveButton))
                                        .addComponent(formatsTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                                .addContainerGap())
        );
        formattingDialogLayout.setVerticalGroup(
                formattingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formattingDialogLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(formatsTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton)
                                .addContainerGap())
        );

        aboutDialog.setTitle("About");
        aboutDialog.setMinimumSize(new java.awt.Dimension(408, 300));

        aboutLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        aboutLabel.setText("About:");

        aboutTextArea.setColumns(20);
        aboutTextArea.setLineWrap(true);
        aboutTextArea.setRows(5);
        aboutTextArea.setText("This tool was developed by Steve of Dementhium,If you pass this on to your friends/other \ncommunities, please give me credits. That's \nall, thanks.\n");
        jScrollPane1.setViewportView(aboutTextArea);

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
                aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(aboutDialogLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                                        .addComponent(aboutHeaderSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                                        .addComponent(aboutLabel))
                                .addContainerGap())
        );
        aboutDialogLayout.setVerticalGroup(
                aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(aboutDialogLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(aboutLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aboutHeaderSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dementhium Coordinate Grabber - www.dementhium.com");
        setIconImage(new javax.swing.ImageIcon("./data/tools/icon.png").getImage());

        outputPane.setDocument(new HTMLDocument());
        outputPane.setEditable(false);
        outputPane.setEditorKit(new HTMLEditorKit());
        outputPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                outputPaneHyperlinkUpdate(evt);
            }
        });
        outputScroll.setViewportView(outputPane);

        worldMapScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        worldMapScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        worldMapScroll.setFocusable(false);
        worldMapScroll.setOpaque(false);

        worldMapPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        worldMapPanel.setDoubleBuffered(false);
        worldMapPanel.setPreferredSize(new java.awt.Dimension(1599, 1434));

        javax.swing.GroupLayout worldMapPanelLayout = new javax.swing.GroupLayout(worldMapPanel);
        worldMapPanel.setLayout(worldMapPanelLayout);
        worldMapPanelLayout.setHorizontalGroup(
                worldMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1599, Short.MAX_VALUE)
        );
        worldMapPanelLayout.setVerticalGroup(
                worldMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1434, Short.MAX_VALUE)
        );

        worldMapScroll.setViewportView(worldMapPanel);

        mapsTabs.addTab("World Map", worldMapScroll);

        godWarsPanel.setPreferredSize(new java.awt.Dimension(605, 785));

        javax.swing.GroupLayout godWarsPanelLayout = new javax.swing.GroupLayout(godWarsPanel);
        godWarsPanel.setLayout(godWarsPanelLayout);
        godWarsPanelLayout.setHorizontalGroup(
                godWarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 605, Short.MAX_VALUE)
        );
        godWarsPanelLayout.setVerticalGroup(
                godWarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 785, Short.MAX_VALUE)
        );

        godWarsMapScroller.setViewportView(godWarsPanel);

        mapsTabs.addTab("Godwars Map", godWarsMapScroller);

        fileMenu.setText("File");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        frameMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        tileGrid.setSelected(true);
        tileGrid.setText("Tile Grid");
        tileGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileGridActionPerformed(evt);
            }
        });
        editMenu.add(tileGrid);

        frameMenuBar.add(editMenu);

        formattingMenu.setText("Formatting");

        formattingItem.setText("Edit formatting");
        formattingItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formattingItemActionPerformed(evt);
            }
        });
        formattingMenu.add(formattingItem);

        frameMenuBar.add(formattingMenu);

        aboutMenu.setText("About");

        aboutItem.setText("About");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        aboutMenu.add(aboutItem);

        frameMenuBar.add(aboutMenu);

        setJMenuBar(frameMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(outputScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                                        .addComponent(mapsTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 618, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(mapsTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 458, Short.MAX_VALUE)
                                .addGap(12, 12, 12)
                                .addComponent(outputScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void outputPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_outputPaneHyperlinkUpdate
        if (evt.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED)) {
            int npcId;
            try {
                npcId = Integer.parseInt(JOptionPane.showInputDialog("Please enter the NPC ID for this spawn."));
            } catch (NumberFormatException ex) {
                npcId = 0;
            }
            int height;
            try {
                height = Integer.parseInt(JOptionPane.showInputDialog("Please enter the sizeX for this spawn."));
            } catch (NumberFormatException ex) {
                height = 0;
            }
            int faceDir;
            try {
                faceDir = Integer.parseInt(((String) JOptionPane.showInputDialog(this, "Choose the npc's face direction", "Face Direction", JOptionPane.QUESTION_MESSAGE, null, faceDirOptions, faceDirOptions[0])).substring(0, 1));
            } catch (NumberFormatException ex) {
                faceDir = 0;
            }
            int doesWalk;
            try {
                doesWalk = JOptionPane.showOptionDialog(this, "Do you want this npc to walk around?", "Walking", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE, null, walkOptions, walkOptions[0]);
            } catch (NumberFormatException ex) {
                doesWalk = 0;
            }
            String type = evt.getDescription().split(":")[0];
            if (type.equals("area")) {
                writeWalkSpawn(npcId, height, faceDir, generatedAreas.get(Integer.parseInt(evt.getDescription().split(":")[1])));
            } else if (type.equals("coord")) {
                writeStationarySpawn(npcId, height, faceDir, doesWalk == 0 ? true : false, generatedCoords.get(Integer.parseInt(evt.getDescription().split(":")[1])));
            }
        }
    }//GEN-LAST:event_outputPaneHyperlinkUpdate

    private void formattingItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formattingItemActionPerformed
    }//GEN-LAST:event_formattingItemActionPerformed

    private void variablesToInsertComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variablesToInsertComboBoxActionPerformed

    }//GEN-LAST:event_variablesToInsertComboBoxActionPerformed

    private void insertSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSelectedButtonActionPerformed

    }//GEN-LAST:event_insertSelectedButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

    }//GEN-LAST:event_saveButtonActionPerformed

    private void variablesToInsertComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variablesToInsertComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_variablesToInsertComboBox1ActionPerformed

    private void insertSelectedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSelectedButton1ActionPerformed

    }//GEN-LAST:event_insertSelectedButton1ActionPerformed

    private void presetFormatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetFormatsButtonActionPerformed

    }//GEN-LAST:event_presetFormatsButtonActionPerformed

    private void presetFormatsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetFormatsButton1ActionPerformed

    }//GEN-LAST:event_presetFormatsButton1ActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_aboutItemActionPerformed

    private void tileGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileGridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tileGridActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JSeparator aboutHeaderSeparator;
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JLabel aboutLabel;
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JTextArea aboutTextArea;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTabbedPane formatsTabbedPane;
    private javax.swing.JDialog formattingDialog;
    private javax.swing.JMenuItem formattingItem;
    private javax.swing.JMenu formattingMenu;
    private javax.swing.JScrollPane formattingScroller;
    private javax.swing.JScrollPane formattingScroller1;
    private javax.swing.JMenuBar frameMenuBar;
    private javax.swing.JScrollPane godWarsMapScroller;
    private javax.swing.JPanel godWarsPanel;
    private javax.swing.JSeparator headerSeparator;
    private javax.swing.JSeparator headerSeparator1;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JLabel insertLabel;
    private javax.swing.JLabel insertLabel1;
    private javax.swing.JButton insertSelectedButton;
    private javax.swing.JButton insertSelectedButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane mapsTabs;
    public javax.swing.JEditorPane outputPane;
    public javax.swing.JScrollPane outputScroll;
    private javax.swing.JButton presetFormatsButton;
    private javax.swing.JButton presetFormatsButton1;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel saveFormattingLabel;
    private javax.swing.JLabel saveFormattingLabel1;
    private javax.swing.JTextArea stationaryFormattingTextArea;
    private javax.swing.JPanel stationarySpawnPanel;
    private javax.swing.JCheckBoxMenuItem tileGrid;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox variablesToInsertComboBox;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox variablesToInsertComboBox1;
    private javax.swing.JTextArea walkingFormattingTextArea;
    private javax.swing.JPanel walkingSpawnPanel;
    private javax.swing.JPanel worldMapPanel;
    public javax.swing.JScrollPane worldMapScroll;
    // End of variables declaration//GEN-END:variables

    public void addTextToPane(String text) {
        try {
            ((HTMLEditorKit) outputPane.getEditorKit()).insertHTML((HTMLDocument) outputPane.getDocument(), ((HTMLDocument) outputPane.getDocument()).getLength(), text, 0, 0, null);
        } catch (BadLocationException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CoordinateGrabber.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    public static class GeneratedCoord {

        private final int x;
        private final int y;

        public GeneratedCoord(int x, int y) {
            this.x = x;
            this.y = y;
        }

        public int getX() {
            return x;
        }

        public int getY() {
            return y;
        }
    }

    public static class GeneratedArea {

        private final int swX;
        private final int swY;
        private final int nwX;
        private final int nwY;

        public GeneratedArea(int swX, int swY, int nwX, int nwY) {
            this.swX = swX;
            this.swY = swY;
            this.nwX = nwX;
            this.nwY = nwY;
        }

        public int getNwX() {
            return nwX;
        }

        public int getNwY() {
            return nwY;
        }

        public int getSeX() {
            return swX;
        }

        public int getSeY() {
            return swY;
        }
    }
}
